service: service-todo
frameworkVersion: '2 || 3'

custom:
  todoTable: 'todo-${sls:stage}'
  eventLogTable: 'todos'

provider:
  name: aws
  region: 'us-east-1'
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  versionFunctions: false
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - !GetAtt TodosTable.Arn
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            - !Ref TodoCreatedEvent
            - !Ref TodoCompletedEvent
            
  environment:
    TODOS_TABLE: ${self:custom.todoTable}
    TODOS_EVENT_LOG_TABLE: ${self:custom.eventLogTable}
    DB_HOST: todo-db.dev-byub.org
    DB_USER: ${ssm:/${self:service}/db/user}
    DB_PASS: ${ssm:/${self:service}/db/pass~true}
    DB_NAME: todos

functions:
  addTodo:
    handler: src/addTodo.handler
    environment:
     TODO_CREATED_TOPIC: !Ref TodoCreatedEvent 
    events:
      - httpApi:
          method: POST
          path: /todos

  onTodoCreated:
    handler: src/onTodoCreated.handler
    events:
      - sns:
          arn: !Ref TodoCreatedEvent
          topicName: todo-created

  getTodos:
    handler: src/getTodos.handler
    events:
      - httpApi:
          method: GET
          path: /todos

  getTodo:
    handler: src/getTodo.handler
    events:
      - httpApi:
          method: GET
          path: /todos/{id}

  updateTodo:
    handler: src/updateTodo.handler
    events:
      - httpApi:
          method: PUT
          path: /todos/{id}
      - httpApi:
          method: POST
          path: /todos/{id}

  deleteTodo:
    handler: src/deleteTodo.handler
    events:
      - httpApi:
          method: DELETE
          path: /todos/{id}

resources:
  Resources:
    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.todoTable}

    TodoCreatedEvent:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: todo-created
        DisplayName: Todo Created

    TodoCompletedEvent:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: todo-completed
        DisplayName: Create Todo

    TodoPriorityChangedEvent:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: todo-priority-changed
        DisplayName: Todo Priority Changed
